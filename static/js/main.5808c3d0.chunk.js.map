{"version":3,"sources":["js/ContactForm.js","js/Filter.js","js/ContactList.js","js/App.js","index.js"],"names":["ContactForm","name","number","onSubmit","onChange","value","type","Filter","filter","ContactList","contacts","onRemove","markupItem","id","key","onClick","contact","toLowerCase","includes","map","element","INITIAL_STATE","App","state","reset","setState","event","target","isExistContact","some","preventDefault","alert","uuidv4","idToRemove","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5808c3d0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction ContactForm({ name, number, onSubmit, onChange }) {\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <h3>Name</h3>\r\n      <input onChange={onChange} value={name} name='name' type='text' />\r\n      \r\n      <h3>Number</h3>\r\n      <input onChange={onChange} value={number} name='number' type='text' />\r\n      \r\n      <button name='btnAdd' type='submit'>Add contact</button>\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\n// const INITIAL_STATE = {\r\n//   name: '',\r\n//   number: ''\r\n// }\r\n\r\n// class ContactForm extends Component {\r\n\r\n//   state = { ...INITIAL_STATE };  \r\n\r\n//   reset = () => {\r\n//     this.setState({ name: '', number: '' })\r\n//   }\r\n\r\n//   isExistContact = () => {\r\n//     const { name } = this.state;\r\n//     const { contacts } = this.props;\r\n//     return contacts.some((contact) => contact.name === name)\r\n//   }\r\n\r\n//   onChange = event => {\r\n//     const { name, value } = event.target;  \r\n//     this.setState({ [name]: value })\r\n//   };\r\n\r\n//   onSubmit = event => {\r\n//     event.preventDefault();\r\n\r\n//     const { name } = this.state;\r\n//     const { contacts } = this.props;\r\n  \r\n//     this.isExistContact()\r\n//       ? alert(`${name} contact already exists`)\r\n//       : this.setState(({ name, number }) => {\r\n//         return name && { contacts: [...contacts, { name, id: uuidv4(), number }] }\r\n//       });\r\n          \r\n//     this.reset();\r\n//   };\r\n\r\n\r\n//   render() {\r\n//     const { onSubmit } = this.props;\r\n//     const { name, number } = this.state;\r\n//     return (\r\n//       <form onSubmit={onSubmit}>\r\n//         <h3>Name</h3>\r\n//         <input onChange={this.onChange} value={name} name='name' type='text' />\r\n        \r\n//         <h3>Number</h3>\r\n//         <input onChange={this.onChange} value={number} name='number' type='text' />\r\n        \r\n//         <button name='btnAdd' type='submit'>Add contact</button>\r\n//       </form>\r\n//     )\r\n//   }\r\n// }\r\n\r\nexport default ContactForm;","import React from 'react';\r\n\r\nfunction Filter({ filter, onChange }) {\r\n  return (\r\n    <>\r\n      <div>Find contacts by name</div>\r\n      <input onChange={onChange} value={filter} name='filter' type='text' />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\n\r\nfunction ContactList({ contacts, filter, onRemove }) {\r\n  const markupItem = ({id, name, number}, onRemove) => (\r\n    <li key={id}>\r\n      <span>{name}: {number}</span>\r\n      <button onClick={() => onRemove(id)}>remove</button>\r\n    </li>\r\n  );\r\n  \r\n  return (\r\n        <ul>\r\n          {\r\n            filter  \r\n              ? contacts\r\n                  .filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\r\n                  .map(({ id, name, number }) => markupItem(id, name, number))\r\n              : contacts\r\n                  .map((element) => markupItem(element, onRemove))\r\n          }\r\n        </ul>\r\n  )\r\n}\r\n\r\nexport default ContactList;","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './ContactForm.js'\nimport Filter from './Filter.js'\nimport ContactList from './ContactList.js'\n\n\n// const INITIAL_STATE = {\n//   contacts: [],\n//   name: '',\n//   number: '',\n//   filter: '',\n// }\n\nconst INITIAL_STATE = {\n  contacts: [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n  ],\n  filter: '',\n  name: '',\n  number: ''\n}\n\nclass App extends Component {\n\n  state = { ...INITIAL_STATE };  \n  \n  reset = () => {\n    this.setState({ name: '', number: '' })\n  }\n\n  onChange = event => {\n    const { name, value } = event.target;  \n    this.setState({ [name]: value })\n  };\n\n  isExistContact = () => {\n    const { name, contacts } = this.state;\n    return contacts.some((contact) => contact.name === name)\n  }\n    \n  \n  onSubmit = event => {\n    event.preventDefault();\n\n    const { name } = this.state;\n\n    this.isExistContact()\n      ? alert(`${name} contact already exists`)\n      : this.setState(({ name, contacts, number }) => {\n        return name && { contacts: [...contacts, { name, id: uuidv4(), number }] }\n      });\n          \n    this.reset();\n  };\n\n  onRemove = idToRemove => {\n    const { contacts } = this.state;\n    this.setState({\n      contacts: contacts.filter(({id}) => id !== idToRemove)\n    })\n  }\n\n  \n\n  render() {\n    const { name, contacts, number, filter } = this.state;\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm\n          name={name}\n          number={number}\n          onSubmit={this.onSubmit}\n          onChange={this.onChange}\n          contacts={contacts}\n        />\n\n        <h2>Contacts</h2>\n        <Filter\n          filter={filter}\n          onChange={this.onChange}          \n        />\n        <ContactList\n          filter={filter}\n          contacts={contacts}\n          onRemove={this.onRemove}\n        />\n      </div>\n  );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './js/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}